/*//GEN-FIRST:event_jViewIncomeActionPerformed
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license//GEN-LAST:event_jViewIncomeActionPerformed
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package UserInterface;

import DataModel.Tutor;
import javax.swing.JPanel;
import javax.swing.JLabel;
import java.awt.GridLayout;
import java.time.YearMonth;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.JTextField;

public class AdminGUI extends javax.swing.JFrame {

    /**
     * Creates new form AdminGUI
     */
    public AdminGUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        welcomeUser = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jMyProfile = new javax.swing.JButton();
        jViewIncome = new javax.swing.JButton();
        jTutor = new javax.swing.JButton();
        jReceptionist = new javax.swing.JButton();
        jLogout = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(160, 200, 120));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/ATCIcon.png"))); // NOI18N
        jLabel1.setText("jLabel1");

        welcomeUser.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        welcomeUser.setForeground(new java.awt.Color(255, 255, 255));
        welcomeUser.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/wave .png"))); // NOI18N
        welcomeUser.setText("Welcome");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Admin Home Page");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 399, Short.MAX_VALUE)
                    .addComponent(welcomeUser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(jLabel1))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(welcomeUser)))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(235, 245, 238));
        jPanel3.setForeground(new java.awt.Color(152, 193, 217));

        jMyProfile.setBackground(new java.awt.Color(112, 138, 88));
        jMyProfile.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jMyProfile.setForeground(new java.awt.Color(50, 50, 50));
        jMyProfile.setText("My Profile");
        jMyProfile.setMaximumSize(new java.awt.Dimension(163, 43));
        jMyProfile.setMinimumSize(new java.awt.Dimension(163, 43));
        jMyProfile.addActionListener(this::jMyProfileActionPerformed);

        jViewIncome.setBackground(new java.awt.Color(112, 138, 88));
        jViewIncome.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jViewIncome.setForeground(new java.awt.Color(50, 50, 50));
        jViewIncome.setText("View Income Report");
        jViewIncome.setMaximumSize(new java.awt.Dimension(163, 43));
        jViewIncome.setMinimumSize(new java.awt.Dimension(163, 43));
        jViewIncome.setPreferredSize(new java.awt.Dimension(163, 43));
        jViewIncome.addActionListener(this::jViewIncomeActionPerformed);

        jTutor.setBackground(new java.awt.Color(112, 138, 88));
        jTutor.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jTutor.setForeground(new java.awt.Color(50, 50, 50));
        jTutor.setText("Tutor");
        jTutor.setMaximumSize(new java.awt.Dimension(163, 43));
        jTutor.setMinimumSize(new java.awt.Dimension(163, 43));
        jTutor.addActionListener(this::jTutorActionPerformed);

        jReceptionist.setBackground(new java.awt.Color(112, 138, 88));
        jReceptionist.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jReceptionist.setForeground(new java.awt.Color(50, 50, 50));
        jReceptionist.setText("Receptionist");
        jReceptionist.setMaximumSize(new java.awt.Dimension(163, 43));
        jReceptionist.setMinimumSize(new java.awt.Dimension(163, 43));
        jReceptionist.addActionListener(this::jReceptionistActionPerformed);

        jLogout.setBackground(new java.awt.Color(60, 179, 113));
        jLogout.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLogout.setForeground(new java.awt.Color(255, 255, 255));
        jLogout.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/logout .png"))); // NOI18N
        jLogout.setText("Logout");
        jLogout.addActionListener(this::jLogoutActionPerformed);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(100, 100, 100)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTutor, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jViewIncome, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(70, 70, 70)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jMyProfile, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jReceptionist, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(100, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLogout)
                .addGap(32, 32, 32))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTutor, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jReceptionist, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jViewIncome, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jMyProfile, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)
                .addComponent(jLogout, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>                        

    // ===== User Profile =====
    private void jMyProfileActionPerformed(java.awt.event.ActionEvent evt) {
        // Assume admin ID is known (you should replace "A001" with actual login value)
        String adminId = "A0001"; // TODO: replace with dynamic value from login session
        
        JTextField nameField = new JTextField();
        JTextField emailField = new JTextField();
        JTextField contactField = new JTextField();
        
        Object[] fields = {
            "Name:", nameField,
            "Email:", emailField,
            "Contact:", contactField
        };
        
        int result = JOptionPane.showConfirmDialog(this, fields, "Update Profile", JOptionPane.OK_CANCEL_OPTION);
        if (result == JOptionPane.OK_OPTION) {
            boolean success = Service.AdminService.updateAdminProfile(
                    adminId,
                    nameField.getText(),
                    emailField.getText(),
                    contactField.getText()
            );
            JOptionPane.showMessageDialog(this, success ? "Profile updated." : "Update failed. Check email format.");
        }
        // TODO add your handling code here:
    }                                          

    // ===== View Income Report =====
    private void jViewIncomeActionPerformed(java.awt.event.ActionEvent evt) {
        // Prompt for month and year
        JPanel panel = new JPanel();
        panel.setLayout(new GridLayout(2, 2));
        panel.add(new JLabel("Select Month (1-12):"));
        JTextField monthField = new JTextField();
        panel.add(monthField);
        panel.add(new JLabel("Select Year (e.g., 2025):"));
        JTextField yearField = new JTextField();
        panel.add(yearField);

        int result = JOptionPane.showConfirmDialog(this, panel, "Select Month and Year", JOptionPane.OK_CANCEL_OPTION);
        if (result != JOptionPane.OK_OPTION) return;

        try {
            int month = Integer.parseInt(monthField.getText());
            int year = Integer.parseInt(yearField.getText());

            // Validate month and year
            if (month < 1 || month > 12) {
                JOptionPane.showMessageDialog(this, "Invalid month. Please enter a value between 1 and 12.");
                return;
            }

            YearMonth selectedMonth = YearMonth.of(year, month);
            YearMonth currentMonth = YearMonth.now();

            if (selectedMonth.isAfter(currentMonth)) {
                JOptionPane.showMessageDialog(this, "No income data available for future months.", "Income Report", JOptionPane.INFORMATION_MESSAGE);
                return;
            }

            int totalProfit = Service.AdminService.getMonthlyProfit(year, month);
            String monthName = selectedMonth.getMonth().name().substring(0, 1).toUpperCase() + selectedMonth.getMonth().name().substring(1).toLowerCase();

            String message = "=== Income Report for " + monthName + " " + year + " ===\n\n"
                        + "Total Income: RM" + totalProfit;

            JOptionPane.showMessageDialog(this, message, "Monthly Income Report", JOptionPane.INFORMATION_MESSAGE);

        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Please enter valid numeric values for month and year.");
        }
    }                                           

    // ===== Tutor Platform =====
    private void jTutorActionPerformed(java.awt.event.ActionEvent evt) {
        String[] options = { "Register Tutor", "Delete Tutor", "Update Tutor" };
        int choice = JOptionPane.showOptionDialog(
                this, 
                "Choose an action for Tutor:", 
                "Tutor Management",
                JOptionPane.DEFAULT_OPTION,
                JOptionPane.PLAIN_MESSAGE,
                null, options, options[0]
        );
        
        if (choice == 0) {
            // Register Tutor
            JTextField usernameField = new JTextField();
            JTextField passwordField = new JTextField();
            JTextField emailField = new JTextField();
            JTextField contactField = new JTextField();
            JTextField subjectNameField = new JTextField();
            JComboBox<String> levelCombo = new JComboBox<>(new String[]{"", "L1", "L2", "L3", "L4", "L5"});
            JTextField feeField = new JTextField();
            
            Object[] fields = {
                "User ID:", usernameField,
                "Password:", passwordField,
                "Email:", emailField,
                "Contact:", contactField,
                "Subject Name (optional):", subjectNameField,
                "Subject Level (optional):", levelCombo,
                "Monthly Fee (optional):", feeField
            };
            
            int result = JOptionPane.showConfirmDialog(this, fields, "Register Tutor", JOptionPane.OK_CANCEL_OPTION);
            if (result == JOptionPane.OK_OPTION) {
                String username = usernameField.getText().trim();
                String password = passwordField.getText().trim();
                String email = emailField.getText().trim();
                String contact = contactField.getText().trim();
                String subjectName = subjectNameField.getText().trim();
                String level = (String) levelCombo.getSelectedItem();
                String fee = feeField.getText().trim();
                
                // If any subject field is blank, treat as no subject
                if (subjectName.isEmpty() || level.isEmpty() || fee.isEmpty()) {
                    subjectName = null;
                    level = null;
                    fee = null;
                }
                
                boolean success = Service.AdminService.registerTutor(
                        username, password, email, contact,
                        subjectName, level, fee
                );

                
                JOptionPane.showMessageDialog(this, 
                        success ? "Tutor registered successfully." : "Invalid email format.");
            }
        } else if (choice == 1) {
            // Delete Tutor
            String tutorId = JOptionPane.showInputDialog(this, "Enter Tutor ID to delete:");
            if (tutorId != null) {
                boolean deleted = Service.AdminService.deleteTutor(tutorId.trim());
                JOptionPane.showMessageDialog(this, deleted ? "Tutor deleted." : "Tutor ID not found.");
            }
        } else if (choice == 2) {
            // Assign subject info to tutor
            JTextField tutorIdField = new JTextField();
            JTextField subjectNameField = new JTextField();
            JComboBox<String> levelCombo = new JComboBox<>(new String[]{"L1", "L2", "L3", "L4", "L5"});

            Object[] fields = {
                "Tutor ID:", tutorIdField,
                "Subject Name:", subjectNameField,
                "Level:", levelCombo
            };

            int result = JOptionPane.showConfirmDialog(this, fields, "Assign Subject to Tutor", JOptionPane.OK_CANCEL_OPTION);
            if (result == JOptionPane.OK_OPTION) {
                String tutorId = tutorIdField.getText().trim();
                String subjectName = subjectNameField.getText().trim();
                String level = (String) levelCombo.getSelectedItem();

                // Validation
                if (tutorId.isEmpty() || subjectName.isEmpty() || level.isEmpty()) {
                    JOptionPane.showMessageDialog(this, "All fields must be filled.");
                    return;
                }

                Tutor tutor = Util.DataManager.of(DataModel.Tutor.class).getRecordById(tutorId);
                if (tutor == null) { 
                    JOptionPane.showMessageDialog(this, "Tutor with ID " + tutorId + " not found.");
                    return;
                }

                // Check if the tutor already has a subject assigned
                if (tutor.getSubject() != null) {
                    JOptionPane.showMessageDialog(this, "Tutor already has a subject assigned.");
                    return;
                }

                // Look for matching Subject from subject data
                List<Subject> subjects = Util.DataManager.of(Subject.class).getAll();
                Subject matchedSubject = subjects.stream()
                    .filter(s -> s.getName().equalsIgnoreCase(subjectName) && s.getLevel().equalsIgnoreCase(level))
                    .findFirst()
                    .orElse(null);

                if (matchedSubject == null) {
                    JOptionPane.showMessageDialog(this, "Subject not found for the given name and level.");
                    return;
                }

                // Assign subject to tutor
                tutor.setSubject(matchedSubject);
                Util.DataManager.of(Tutor.class).updateRecord(tutor);

                JOptionPane.showMessageDialog(this, "Subject assigned to tutor successfully.");
            }
        }
 
        
        // TODO add your handling code here:
    }
               
    // ===== Receptionist Platform =====
    private void jReceptionistActionPerformed(java.awt.event.ActionEvent evt) {
        String[] options = { "Register Receptionist", "Delete Receptionist" };
        int choice = JOptionPane.showOptionDialog(
                this, 
                "Choose an action for Receptionist:", 
                "Receptionist Management",
                JOptionPane.DEFAULT_OPTION,
                JOptionPane.PLAIN_MESSAGE,
                null, options, options[0]
        );
        
        if (choice == 0) {
            // Register Receptionist
            JTextField nameField = new JTextField();
            JTextField usernameField = new JTextField();
            JTextField passwordField = new JTextField();
            JTextField emailField = new JTextField();
            JTextField contactField = new JTextField();
            
            Object[] fields = {
                "Name:", nameField,
                "User ID:", usernameField,
                "Password:", passwordField,
                "Email:", emailField,
                "Contact:", contactField
            };
            
            int result = JOptionPane.showConfirmDialog(this, fields, "Register Receptionist", JOptionPane.OK_CANCEL_OPTION);
            if (result == JOptionPane.OK_OPTION) {
                boolean success = Service.AdminService.registerReceptionist(
                        nameField.getText(),
                        usernameField.getText(),
                        passwordField.getText(),
                        emailField.getText(),
                        contactField.getText()
                );
                JOptionPane.showMessageDialog(this, success ? "Receptionist registered successfully." : "Invalid email format.");
            }
        } else if (choice == 1) {
            // Delete Receptionist
            String recepId = JOptionPane.showInputDialog(this, "Enter Receptionist ID to delete:");
            if (recepId != null) {
                boolean deleted = Service.AdminService.deleteReceptionist(recepId.trim());
                JOptionPane.showMessageDialog(this, deleted ? "Receptionist deleted." : "Receptionist ID not found.");
            }
        }
    }                                             

    // ===== Logout Button =====
    private void jLogoutActionPerformed(java.awt.event.ActionEvent evt) {                                        
        LoginGUI Login = new LoginGUI();
        Login.setVisible(true);
        this.dispose();

    }                                       

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdminGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new AdminGUI().setVisible(true);
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JButton jLogout;
    private javax.swing.JButton jMyProfile;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JButton jReceptionist;
    private javax.swing.JButton jTutor;
    private javax.swing.JButton jViewIncome;
    private javax.swing.JLabel welcomeUser;
    // End of variables declaration                   
}
