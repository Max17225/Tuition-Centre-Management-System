/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UserInterface.Student;

import DataModel.Student; 
import DataModel.Subject; 
import Service.StudentService; 
import javax.swing.JFrame;
import javax.swing.JOptionPane; 
import java.util.List;
import java.util.HashMap;
import java.util.Map;
import java.text.DecimalFormat; 
import java.awt.Color;
import javax.swing.SwingUtilities;
import javax.swing.JLabel;

/**
 *
 * @author User
 */
public class StudentPaymentGUI extends javax.swing.JPanel {

    private Student loggedInStudent;
    private StudentService studentService;
    private JFrame mainFrame; // To get the parent frame for navigation
    private int previousFrameX;
    private int previousFrameY;
    

    // A map to store subjects linked to their GUI components for easier management
    private Map<String, Subject> displayedSubjects = new HashMap<>();

    /**
     * Creates new form StudentPaymentGUI
     * @param student The logged-in student whose payments are to be displayed.
     * @param mainFrame The main JFrame of the application.
     * @param previousFrameX The X coordinate of the previous frame.
     * @param previousFrameY The Y coordinate of the previous frame.
     */
    public StudentPaymentGUI(Student student, JFrame mainFrame, int previousFrameX, int previousFrameY) {
        this.loggedInStudent = student;
        this.studentService = new StudentService(); 
        this.mainFrame = mainFrame;
        this.previousFrameX = previousFrameX;
        this.previousFrameY = previousFrameY;
        initComponents();
        loadPaymentData(); // Load data when the panel is initialized
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        subject1 = new javax.swing.JLabel();
        subject2 = new javax.swing.JLabel();
        subject3 = new javax.swing.JLabel();
        totalAmount = new javax.swing.JLabel();
        subject1Amount = new javax.swing.JLabel();
        subject1Status = new javax.swing.JLabel();
        subject2Amount = new javax.swing.JLabel();
        subject2Status = new javax.swing.JLabel();
        subject3Status = new javax.swing.JLabel();
        subject3Amount = new javax.swing.JLabel();
        makePaymentSubject1 = new javax.swing.JButton();
        makePaymentSubject2 = new javax.swing.JButton();
        makePaymentSubject3 = new javax.swing.JButton();
        backButton = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        jPanel1.setBackground(new java.awt.Color(45, 118, 232));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/payment.png"))); // NOI18N
        jLabel1.setText("Payment");

        jPanel2.setBackground(new java.awt.Color(235, 245, 238));
        jPanel2.setForeground(new java.awt.Color(0, 0, 0));

        subject1.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 14)); // NOI18N
        subject1.setForeground(new java.awt.Color(0, 0, 0));
        subject1.setText("Subject1");

        subject2.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 14)); // NOI18N
        subject2.setForeground(new java.awt.Color(0, 0, 0));
        subject2.setText("Subject2");

        subject3.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 14)); // NOI18N
        subject3.setForeground(new java.awt.Color(0, 0, 0));
        subject3.setText("Subject3");

        totalAmount.setFont(new java.awt.Font("Yu Gothic UI Semilight", 1, 18)); // NOI18N
        totalAmount.setForeground(new java.awt.Color(0, 0, 0));
        totalAmount.setText("TotalAmount");

        subject1Amount.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 14)); // NOI18N
        subject1Amount.setForeground(new java.awt.Color(0, 0, 0));
        subject1Amount.setText("Subject1Amount");

        subject1Status.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 14)); // NOI18N
        subject1Status.setForeground(new java.awt.Color(0, 0, 0));
        subject1Status.setText("Status");

        subject2Amount.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 14)); // NOI18N
        subject2Amount.setForeground(new java.awt.Color(0, 0, 0));
        subject2Amount.setText("Subject2Amount");

        subject2Status.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 14)); // NOI18N
        subject2Status.setForeground(new java.awt.Color(0, 0, 0));
        subject2Status.setText("Status");

        subject3Status.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 14)); // NOI18N
        subject3Status.setForeground(new java.awt.Color(0, 0, 0));
        subject3Status.setText("Status");

        subject3Amount.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 14)); // NOI18N
        subject3Amount.setForeground(new java.awt.Color(0, 0, 0));
        subject3Amount.setText("Subject3Amount");

        makePaymentSubject1.setForeground(new java.awt.Color(0, 0, 0));
        makePaymentSubject1.setText("Pay Now");
        makePaymentSubject1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                makePaymentSubject1ActionPerformed(evt);
            }
        });

        makePaymentSubject2.setForeground(new java.awt.Color(0, 0, 0));
        makePaymentSubject2.setText("Pay Now");
        makePaymentSubject2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                makePaymentSubject2ActionPerformed(evt);
            }
        });

        makePaymentSubject3.setForeground(new java.awt.Color(0, 0, 0));
        makePaymentSubject3.setText("Pay Now");
        makePaymentSubject3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                makePaymentSubject3ActionPerformed(evt);
            }
        });

        backButton.setForeground(new java.awt.Color(0, 0, 0));
        backButton.setText("Back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 0, 0));
        jLabel6.setText("Subjects");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("Amount");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setText("Status");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 0));
        jLabel4.setText("Make Payment");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(totalAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 387, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(subject1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(subject2, javax.swing.GroupLayout.DEFAULT_SIZE, 59, Short.MAX_VALUE)
                                .addComponent(subject3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jLabel6))
                        .addGap(22, 22, 22)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(subject2Amount, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(subject1Amount, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(subject3Amount, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(45, 45, 45)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(subject2Status)
                            .addComponent(subject1Status, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(subject3Status)
                            .addComponent(jLabel3))
                        .addGap(22, 22, 22)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(makePaymentSubject2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(makePaymentSubject1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(makePaymentSubject3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(backButton, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(8, 8, 8)))
                .addContainerGap(15, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(subject1Amount)
                    .addComponent(subject1Status)
                    .addComponent(makePaymentSubject1)
                    .addComponent(subject1))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(subject2)
                    .addComponent(subject2Amount)
                    .addComponent(subject2Status)
                    .addComponent(makePaymentSubject2))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(subject3)
                    .addComponent(subject3Status)
                    .addComponent(subject3Amount)
                    .addComponent(makePaymentSubject3))
                .addGap(27, 27, 27)
                .addComponent(totalAmount)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(backButton, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(15, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(139, 139, 139)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(24, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void makePaymentSubject3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_makePaymentSubject3ActionPerformed
        // Find the Subject associated with subject3 label
        Subject sub3 = displayedSubjects.get("subject3");
        if (sub3 != null) {
            handleMakePayment(sub3.getId(), sub3.getFeePerMonth());
        } else {
            JOptionPane.showMessageDialog(this, "No subject assigned to Subject 3.", "Payment Error", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_makePaymentSubject3ActionPerformed

    private void makePaymentSubject1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_makePaymentSubject1ActionPerformed
        // Find the Subject associated with subject1 label
        Subject sub1 = displayedSubjects.get("subject1");
        if (sub1 != null) {
            handleMakePayment(sub1.getId(), sub1.getFeePerMonth());
        } else {
            JOptionPane.showMessageDialog(this, "No subject assigned to Subject 1.", "Payment Error", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_makePaymentSubject1ActionPerformed

    private void makePaymentSubject2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_makePaymentSubject2ActionPerformed
        // Find the Subject associated with subject2 label
        Subject sub2 = displayedSubjects.get("subject2");
        if (sub2 != null) {
            handleMakePayment(sub2.getId(), sub2.getFeePerMonth());
        } else {
            JOptionPane.showMessageDialog(this, "No subject assigned to Subject 2.", "Payment Error", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_makePaymentSubject2ActionPerformed

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        // Create a new instance of StudentGUI (which is a JFrame)
        // Pass the student object and the coordinates where it was previously located
        UserInterface.Student.StudentGUI studentGUIFrame =
            new UserInterface.Student.StudentGUI(loggedInStudent, previousFrameX, previousFrameY);

        // Make the new StudentGUI JFrame visible
        studentGUIFrame.setVisible(true);

        // Get the parent frame of the current StudentPaymentGUI panel and dispose it
        // The parent frame is the JFrame that contains this StudentPaymentGUI panel
        JFrame parentFrame = (JFrame) SwingUtilities.getWindowAncestor(this);
        if (parentFrame != null) {
            parentFrame.dispose();
        }
    }//GEN-LAST:event_backButtonActionPerformed

     /**
     * Loads and displays the student's enrolled subjects, their amounts, and payment statuses.
     * Also calculates and displays the total outstanding amount.
     */
    private void loadPaymentData() {
        // Clear previous data in case of refresh
        subject1.setText("Subject1:");
        subject1Amount.setText("$0.00");
        subject1Amount.setForeground(Color.BLACK); // Reset to default
        subject1Status.setText("N/A");
        subject1Status.setForeground(Color.BLACK); // Reset to default
        makePaymentSubject1.setEnabled(false); // Disable button initially

        subject2.setText("Subject2:");
        subject2Amount.setText("$0.00");
        subject2Amount.setForeground(Color.BLACK); // Reset to default
        subject2Status.setText("N/A");
        subject2Status.setForeground(Color.BLACK); // Reset to default
        makePaymentSubject2.setEnabled(false); // Disable button initially

        subject3.setText("Subject3:");
        subject3Amount.setText("$0.00");
        subject3Amount.setForeground(Color.BLACK); // Reset to default
        subject3Status.setText("N/A");
        subject3Status.setForeground(Color.BLACK); // Reset to default
        makePaymentSubject3.setEnabled(false); // Disable button initially
        
        displayedSubjects.clear(); // Clear the map

        DecimalFormat df = new DecimalFormat("#,##0.00"); // For currency formatting

        List<StudentService.SubjectPaymentDetail> paymentDetails =
            studentService.getEnrolledSubjectsWithPaymentStatusAndAmount(loggedInStudent.getId());

        // Define colors
        Color pendingColor = new Color(255, 140, 0); // Orange
        Color paidColor = new Color(34, 139, 34);    // Forest Green
        Color unpaidColor = new Color(220, 20, 60);  // Crimson Red (or use Color.RED for a brighter red)
        Color defaultColor = Color.BLACK;

        // Populate labels based on up to 3 enrolled subjects
        for (int i = 0; i < paymentDetails.size(); i++) {
            StudentService.SubjectPaymentDetail detail = paymentDetails.get(i);
            String subjectName = detail.subject.getSubjectName();
            String amount = "$" + df.format(Double.parseDouble(detail.subject.getFeePerMonth()));
            String status = detail.status;

            JLabel currentStatusLabel = null;
            JLabel currentSubjectLabel = null;
            JLabel currentAmountLabel = null;
            javax.swing.JButton currentMakePaymentButton = null;

            switch (i) {
                case 0:
                    currentSubjectLabel = subject1;
                    currentAmountLabel = subject1Amount;
                    currentStatusLabel = subject1Status;
                    currentMakePaymentButton = makePaymentSubject1;
                    displayedSubjects.put("subject1", detail.subject);
                    break;
                case 1:
                    currentSubjectLabel = subject2;
                    currentAmountLabel = subject2Amount;
                    currentStatusLabel = subject2Status;
                    currentMakePaymentButton = makePaymentSubject2;
                    displayedSubjects.put("subject2", detail.subject);
                    break;
                case 2:
                    currentSubjectLabel = subject3;
                    currentAmountLabel = subject3Amount;
                    currentStatusLabel = subject3Status;
                    currentMakePaymentButton = makePaymentSubject3;
                    displayedSubjects.put("subject3", detail.subject);
                    break;
                default:
                    System.out.println("Warning: More than 3 subjects enrolled. Only first 3 are displayed.");
                    continue; // Skip to the next iteration if more than 3 subjects
            }

            // Set text and amount for the current subject
            currentSubjectLabel.setText(subjectName + ":");
            currentAmountLabel.setText(amount);
            currentStatusLabel.setText(status);

            // Apply color based on status to BOTH amount and status labels
            switch (status.toLowerCase()) {
                case "pending":
                    currentStatusLabel.setForeground(pendingColor);
                    currentAmountLabel.setForeground(pendingColor);
                    currentMakePaymentButton.setEnabled(false); // Disable payment if pending
                    break;
                case "paid":
                    currentStatusLabel.setForeground(paidColor);
                    currentAmountLabel.setForeground(paidColor);
                    currentMakePaymentButton.setEnabled(false); // Disable payment if paid
                    break;
                case "unpaid":
                    currentStatusLabel.setForeground(unpaidColor);
                    currentAmountLabel.setForeground(unpaidColor);
                    currentMakePaymentButton.setEnabled(true); // Enable payment if unpaid
                    break;
                default:
                    currentStatusLabel.setForeground(defaultColor); // Fallback to black for other statuses
                    currentAmountLabel.setForeground(defaultColor);
                    currentMakePaymentButton.setEnabled(false); // Disable for unknown status
                    break;
            }
        }

        // Calculate and display total outstanding amount
        double totalOutstanding = studentService.calculateTotalOutstandingAmount(loggedInStudent.getId());
        totalAmount.setText("Total Outstanding Amount: $" + df.format(totalOutstanding));
    }


    /**
     * Handles the logic for making a payment for a specific subject.
     * @param subjectId The ID of the subject being paid for.
     * @param amount The amount to be paid for the subject.
     */
    private void handleMakePayment(String subjectId, String amount) {
        int confirm = JOptionPane.showConfirmDialog(this,
            "Are you sure you want to make a payment of $" + amount + " for this subject?",
            "Confirm Payment", JOptionPane.YES_NO_OPTION);

        if (confirm == JOptionPane.YES_OPTION) {
            boolean success = studentService.recordSubjectPayment(loggedInStudent.getId(), subjectId, amount);
            if (success) {
                JOptionPane.showMessageDialog(this,
                    "Payment initiated successfully. Status set to Pending. It will be reviewed by the receptionist.",
                    "Payment Success", JOptionPane.INFORMATION_MESSAGE);
                loadPaymentData(); // Reload data to update statuses and total amount
            } else {
                JOptionPane.showMessageDialog(this,
                    "Failed to initiate payment. Please check if it's already paid or pending.",
                    "Payment Failed", JOptionPane.ERROR_MESSAGE);
            }
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JButton makePaymentSubject1;
    private javax.swing.JButton makePaymentSubject2;
    private javax.swing.JButton makePaymentSubject3;
    private javax.swing.JLabel subject1;
    private javax.swing.JLabel subject1Amount;
    private javax.swing.JLabel subject1Status;
    private javax.swing.JLabel subject2;
    private javax.swing.JLabel subject2Amount;
    private javax.swing.JLabel subject2Status;
    private javax.swing.JLabel subject3;
    private javax.swing.JLabel subject3Amount;
    private javax.swing.JLabel subject3Status;
    private javax.swing.JLabel totalAmount;
    // End of variables declaration//GEN-END:variables
}
