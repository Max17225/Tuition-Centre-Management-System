/**
 * StudentPaymentGUI.java
 *
 * Provides a payment panel interface for students as part of the Student Dashboard.
 * Allows students to:
 * - View enrolled subjects (up to 3)
 * - Check individual payment amounts and current statuses (Paid, Pending, Unpaid)
 * - Make payments for Unpaid subjects (transitions to Pending)
 * - Generate and view receipts for Paid subjects
 *
 * Core Functionalities:
 * - Uses StudentService to load enrolled subjects and payment data
 * - Dynamically updates labels and buttons based on payment status
 * - Calculates and displays total outstanding amount
 *
 * Used in:
 * - StudentGUI â†’ paymentButtonActionPerformed
 *
 * Depends on:
 * - DataModel: Student, Subject, Payment
 * - Service: StudentService
 * - Util: SwingUtilities (for window transition)
 */

package UserInterface.Student;

import DataModel.Student; 
import DataModel.Subject; 
import DataModel.Payment;
import Service.StudentService; 
import javax.swing.JOptionPane; 
import java.util.List;
import java.util.HashMap;
import java.util.Map;
import java.text.DecimalFormat; 
import java.awt.Color;
import javax.swing.SwingUtilities;
import javax.swing.JLabel;
import javax.swing.JTextArea;

public class StudentPaymentGUI extends javax.swing.JPanel {

    private Student loggedInStudent; // The currently logged-in student
    private StudentService studentService; // Service layer for student-related operations

    // Maps subject identifier (e.g., "subject1") to its corresponding Subject object
    private Map<String, Subject> displayedSubjects = new HashMap<>();

   /**
    * Constructor for StudentPaymentGUI.
    * Initializes the GUI components and loads payment data for the provided student.
    * 
    * @param student The student whose payment data will be managed.
    */
    public StudentPaymentGUI(Student student) {
        this.loggedInStudent = student;
        this.studentService = new StudentService(); 
      
        initComponents();
        
        loadPaymentData(); // Load data on panel load
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        subject1 = new javax.swing.JLabel();
        subject2 = new javax.swing.JLabel();
        subject3 = new javax.swing.JLabel();
        totalAmount = new javax.swing.JLabel();
        subject1Amount = new javax.swing.JLabel();
        subject1Status = new javax.swing.JLabel();
        subject2Amount = new javax.swing.JLabel();
        subject2Status = new javax.swing.JLabel();
        subject3Status = new javax.swing.JLabel();
        subject3Amount = new javax.swing.JLabel();
        makePaymentSubject1 = new javax.swing.JButton();
        makePaymentSubject2 = new javax.swing.JButton();
        makePaymentSubject3 = new javax.swing.JButton();
        backButton = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        receipt1 = new javax.swing.JButton();
        receipt2 = new javax.swing.JButton();
        receipt3 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();

        jPanel1.setBackground(new java.awt.Color(45, 118, 232));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/payment.png"))); // NOI18N
        jLabel1.setText("Payment");

        jPanel2.setBackground(new java.awt.Color(235, 245, 238));
        jPanel2.setForeground(new java.awt.Color(0, 0, 0));

        subject1.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 14)); // NOI18N
        subject1.setForeground(new java.awt.Color(0, 0, 0));
        subject1.setText("Subject1");

        subject2.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 14)); // NOI18N
        subject2.setForeground(new java.awt.Color(0, 0, 0));
        subject2.setText("Subject2");

        subject3.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 14)); // NOI18N
        subject3.setForeground(new java.awt.Color(0, 0, 0));
        subject3.setText("Subject3");

        totalAmount.setFont(new java.awt.Font("Segoe UI Semibold", 1, 18)); // NOI18N
        totalAmount.setForeground(new java.awt.Color(0, 0, 0));
        totalAmount.setText("TotalAmount");

        subject1Amount.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 14)); // NOI18N
        subject1Amount.setForeground(new java.awt.Color(0, 0, 0));
        subject1Amount.setText("Subject1Amount");

        subject1Status.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 14)); // NOI18N
        subject1Status.setForeground(new java.awt.Color(0, 0, 0));
        subject1Status.setText("Status");

        subject2Amount.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 14)); // NOI18N
        subject2Amount.setForeground(new java.awt.Color(0, 0, 0));
        subject2Amount.setText("Subject2Amount");

        subject2Status.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 14)); // NOI18N
        subject2Status.setForeground(new java.awt.Color(0, 0, 0));
        subject2Status.setText("Status");

        subject3Status.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 14)); // NOI18N
        subject3Status.setForeground(new java.awt.Color(0, 0, 0));
        subject3Status.setText("Status");

        subject3Amount.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 14)); // NOI18N
        subject3Amount.setForeground(new java.awt.Color(0, 0, 0));
        subject3Amount.setText("Subject3Amount");

        makePaymentSubject1.setForeground(new java.awt.Color(0, 0, 0));
        makePaymentSubject1.setText("Pay Now");
        makePaymentSubject1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                makePaymentSubject1ActionPerformed(evt);
            }
        });

        makePaymentSubject2.setForeground(new java.awt.Color(0, 0, 0));
        makePaymentSubject2.setText("Pay Now");
        makePaymentSubject2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                makePaymentSubject2ActionPerformed(evt);
            }
        });

        makePaymentSubject3.setForeground(new java.awt.Color(0, 0, 0));
        makePaymentSubject3.setText("Pay Now");
        makePaymentSubject3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                makePaymentSubject3ActionPerformed(evt);
            }
        });

        backButton.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        backButton.setForeground(new java.awt.Color(0, 0, 0));
        backButton.setText("Back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 0, 0));
        jLabel6.setText("Subjects");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("Amount");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setText("Status");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 0));
        jLabel4.setText("Make Payment");

        receipt1.setForeground(new java.awt.Color(0, 0, 0));
        receipt1.setText("Print Receipt");
        receipt1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                receipt1ActionPerformed(evt);
            }
        });

        receipt2.setForeground(new java.awt.Color(0, 0, 0));
        receipt2.setText("Print Receipt");
        receipt2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                receipt2ActionPerformed(evt);
            }
        });

        receipt3.setForeground(new java.awt.Color(0, 0, 0));
        receipt3.setText("Print Receipt");
        receipt3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                receipt3ActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 0, 0));
        jLabel5.setText("Receipt");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(totalAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 387, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(subject1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(subject2, javax.swing.GroupLayout.DEFAULT_SIZE, 59, Short.MAX_VALUE)
                                .addComponent(subject3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jLabel6))
                        .addGap(22, 22, 22)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(subject2Amount, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(subject1Amount, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(subject3Amount, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(45, 45, 45)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(subject2Status)
                            .addComponent(subject1Status, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(subject3Status)
                            .addComponent(jLabel3))
                        .addGap(22, 22, 22)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(makePaymentSubject2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(makePaymentSubject1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(makePaymentSubject3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(receipt3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(backButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(receipt1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(receipt2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(20, 20, 20))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addGap(25, 25, 25)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(subject1Amount)
                    .addComponent(subject1Status)
                    .addComponent(makePaymentSubject1)
                    .addComponent(subject1)
                    .addComponent(receipt1))
                .addGap(25, 25, 25)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(subject2)
                    .addComponent(subject2Amount)
                    .addComponent(subject2Status)
                    .addComponent(makePaymentSubject2)
                    .addComponent(receipt2))
                .addGap(25, 25, 25)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(subject3)
                    .addComponent(subject3Status)
                    .addComponent(subject3Amount)
                    .addComponent(makePaymentSubject3)
                    .addComponent(receipt3))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(totalAmount)
                        .addContainerGap(51, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(backButton, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(23, 23, 23))))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(207, 207, 207))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(12, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
    }// </editor-fold>//GEN-END:initComponents

    /**
    * Triggered when the "Pay Now" button for subject 3 is clicked.
    * Initiates payment handling logic.
    */
    private void makePaymentSubject3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_makePaymentSubject3ActionPerformed
        // Find the Subject associated with subject3 label
        Subject sub3 = displayedSubjects.get("subject3");
        if (sub3 != null) {
            handleMakePayment(sub3.getId(), sub3.getFeePerMonth());
        } else {
            JOptionPane.showMessageDialog(this, "No subject assigned to Subject 3.", "Payment Error", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_makePaymentSubject3ActionPerformed

    /**
    * Triggered when the "Pay Now" button for subject 1 is clicked.
    * Initiates payment handling logic.
    */
    private void makePaymentSubject1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_makePaymentSubject1ActionPerformed
        // Find the Subject associated with subject1 label
        Subject sub1 = displayedSubjects.get("subject1");
        if (sub1 != null) {
            handleMakePayment(sub1.getId(), sub1.getFeePerMonth());
        } else {
            JOptionPane.showMessageDialog(this, "No subject assigned to Subject 1.", "Payment Error", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_makePaymentSubject1ActionPerformed

    /**
    * Triggered when the "Pay Now" button for subject 2 is clicked.
    * Initiates payment handling logic.
    */
    private void makePaymentSubject2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_makePaymentSubject2ActionPerformed
        // Find the Subject associated with subject2 label
        Subject sub2 = displayedSubjects.get("subject2");
        if (sub2 != null) {
            handleMakePayment(sub2.getId(), sub2.getFeePerMonth());
        } else {
            JOptionPane.showMessageDialog(this, "No subject assigned to Subject 2.", "Payment Error", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_makePaymentSubject2ActionPerformed

    /**
    * Returns to the student dashboard (StudentGUI) after refreshing student data.
    * Closes the current payment panel window.
    */  
    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        // Re-fetch the latest student data from the text file
        StudentService studentService = new StudentService();
        Student freshStudent = studentService.getStudentById(loggedInStudent.getId());

        if (freshStudent == null) {
            JOptionPane.showMessageDialog(this, "Unable to reload student data. Please try again.", "Reload Failed", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Create and show a refreshed StudentGUI 
        StudentGUI refreshedGUI = new StudentGUI(freshStudent);
        refreshedGUI.setVisible(true);

        // Close the current window
        SwingUtilities.getWindowAncestor(this).dispose();
    }//GEN-LAST:event_backButtonActionPerformed

    /**
    * Triggered when the "Print Receipt" button for subject 1 is clicked.
    * Displays receipt dialog for the subject if paid.
    */
    private void receipt1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_receipt1ActionPerformed
        Subject subject = displayedSubjects.get("subject1");
        generateReceiptForSubject(subject);
    }//GEN-LAST:event_receipt1ActionPerformed

    /**
    * Triggered when the "Print Receipt" button for subject 3 is clicked.
    * Displays receipt dialog for the subject if paid.
    */
    private void receipt3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_receipt3ActionPerformed
        Subject subject = displayedSubjects.get("subject3");
        generateReceiptForSubject(subject);
    }//GEN-LAST:event_receipt3ActionPerformed

    /**
    * Triggered when the "Print Receipt" button for subject 2 is clicked.
    * Displays receipt dialog for the subject if paid.
    */
    private void receipt2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_receipt2ActionPerformed
        Subject subject = displayedSubjects.get("subject2");
        generateReceiptForSubject(subject);
    }//GEN-LAST:event_receipt2ActionPerformed
    
    /**
    * Loads the student's payment-related data including:
    * - Subject names
    * - Amount due
    * - Status of each subject's payment (Paid / Unpaid / Pending)
    * 
    * It also sets GUI visibility/logic for enabling or disabling payment and receipt buttons
    * depending on the current status.
    */
    private void loadPaymentData() {
        // Clear previous data in case of refresh
        subject1.setText("Subject1:");
        subject1Amount.setText("$0.00");
        subject1Amount.setForeground(Color.BLACK); // Reset to default
        subject1Status.setText("N/A");
        subject1Status.setForeground(Color.BLACK); // Reset to default
        makePaymentSubject1.setEnabled(false); // Disable button initially

        subject2.setText("Subject2:");
        subject2Amount.setText("$0.00");
        subject2Amount.setForeground(Color.BLACK); // Reset to default
        subject2Status.setText("N/A");
        subject2Status.setForeground(Color.BLACK); // Reset to default
        makePaymentSubject2.setEnabled(false); // Disable button initially

        subject3.setText("Subject3:");
        subject3Amount.setText("$0.00");
        subject3Amount.setForeground(Color.BLACK); // Reset to default
        subject3Status.setText("N/A");
        subject3Status.setForeground(Color.BLACK); // Reset to default
        makePaymentSubject3.setEnabled(false); // Disable button initially
        
        displayedSubjects.clear(); // Clear the map

        DecimalFormat df = new DecimalFormat("#,##0.00"); // For currency formatting

        List<StudentService.SubjectPaymentDetail> paymentDetails =
            studentService.getEnrolledSubjectsWithPaymentStatusAndAmount(loggedInStudent.getId());

        // Define colors
        Color pendingColor = new Color(255, 140, 0); 
        Color paidColor = new Color(34, 139, 34);    
        Color unpaidColor = new Color(220, 20, 60);  
        Color defaultColor = Color.BLACK;

        // Populate labels based on up to 3 enrolled subjects
        for (int i = 0; i < paymentDetails.size(); i++) {
            StudentService.SubjectPaymentDetail detail = paymentDetails.get(i);
            String subjectName = detail.subject.getSubjectName();
            String amount = "$" + df.format(Double.parseDouble(detail.subject.getFeePerMonth()));
            String status = detail.status;

            JLabel currentStatusLabel = null;
            JLabel currentSubjectLabel = null;
            JLabel currentAmountLabel = null;
            javax.swing.JButton currentMakePaymentButton = null;
            javax.swing.JButton currentReceiptButton = null;

            switch (i) {
            case 0:
                currentSubjectLabel = subject1;
                currentAmountLabel = subject1Amount;
                currentStatusLabel = subject1Status;
                currentMakePaymentButton = makePaymentSubject1;
                currentReceiptButton = receipt1;
                displayedSubjects.put("subject1", detail.subject);
                break;
            case 1:
                currentSubjectLabel = subject2;
                currentAmountLabel = subject2Amount;
                currentStatusLabel = subject2Status;
                currentMakePaymentButton = makePaymentSubject2;
                currentReceiptButton = receipt2;
                displayedSubjects.put("subject2", detail.subject);
                break;
            case 2:
                currentSubjectLabel = subject3;
                currentAmountLabel = subject3Amount;
                currentStatusLabel = subject3Status;
                currentMakePaymentButton = makePaymentSubject3;
                currentReceiptButton = receipt3;
                displayedSubjects.put("subject3", detail.subject);
                break;
            default:
                System.out.println("Warning: More than 3 subjects enrolled. Only first 3 are displayed.");
                continue;
        }
            // Set text and amount for the current subject
            currentSubjectLabel.setText(subjectName + ":");
            currentAmountLabel.setText(amount);
            currentStatusLabel.setText(status);

            // Apply color based on status to BOTH amount and status labels
            switch (status.toLowerCase()) {
                case "pending":
                    currentStatusLabel.setForeground(pendingColor);
                    currentAmountLabel.setForeground(pendingColor);
                    currentMakePaymentButton.setEnabled(false);
                    currentReceiptButton.setEnabled(false); 
                    break;
                case "paid":
                    currentStatusLabel.setForeground(paidColor);
                    currentAmountLabel.setForeground(paidColor);
                    currentMakePaymentButton.setEnabled(false);
                    currentReceiptButton.setEnabled(true); 
                    break;
                case "unpaid":
                    currentStatusLabel.setForeground(unpaidColor);
                    currentAmountLabel.setForeground(unpaidColor);
                    currentMakePaymentButton.setEnabled(true);
                    currentReceiptButton.setEnabled(false); 
                    break;
                default:
                    currentStatusLabel.setForeground(defaultColor);
                    currentAmountLabel.setForeground(defaultColor);
                    currentMakePaymentButton.setEnabled(false);
                    currentReceiptButton.setEnabled(false); 
                    break;
            }
        }

        // Calculate and display total outstanding amount
        double totalOutstanding = studentService.calculateTotalOutstandingAmount(loggedInStudent.getId());
        totalAmount.setText("Total Outstanding Amount: $" + df.format(totalOutstanding));
    }


    /**
    * Initiates a payment request for a given subject.
    * Sets the status to "Pending" and disables further changes until reviewed.
    * 
    * @param subjectId The ID of the subject to make payment for.
    * @param amount The amount to be paid.
    */
    private void handleMakePayment(String subjectId, String amount) {
        int confirm = JOptionPane.showConfirmDialog(this,
            "Are you sure you want to make a payment of $" + amount + " for this subject?",
            "Confirm Payment", JOptionPane.YES_NO_OPTION);

        if (confirm == JOptionPane.YES_OPTION) {
            boolean success = studentService.recordSubjectPayment(loggedInStudent.getId(), subjectId, amount);
            if (success) {
                JOptionPane.showMessageDialog(this,
                    "Payment initiated successfully. Status set to Pending. It will be reviewed by the receptionist.",
                    "Payment Success", JOptionPane.INFORMATION_MESSAGE);
                loadPaymentData(); // Reload data to update statuses and total amount
            } else {
                JOptionPane.showMessageDialog(this,
                    "Failed to initiate payment. Please check if it's already paid or pending.",
                    "Payment Failed", JOptionPane.ERROR_MESSAGE);
            }
        }
    }
    
    /**
    * Generates and displays a formatted receipt for a successfully paid subject.
    * 
    * @param subject The Subject object for which receipt is to be shown.
    */
    private void generateReceiptForSubject(Subject subject) {
        if (subject == null) {
            JOptionPane.showMessageDialog(this, "No subject data found for receipt.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        List<Payment> payments = studentService.getPaymentsForStudent(loggedInStudent.getId());
        Payment targetPayment = null;

        for (Payment p : payments) {
            if (p.getSubjectId().equals(subject.getId()) && "Paid".equalsIgnoreCase(p.getStatus())) {
                targetPayment = p;
                break;
            }
        }

        if (targetPayment == null) {
            JOptionPane.showMessageDialog(this, "No PAID payment record found for this subject.", "Receipt Error", JOptionPane.WARNING_MESSAGE);
            return;
        }

        // Format the receipt
        StringBuilder receipt = new StringBuilder();
        receipt.append("----- PAYMENT RECEIPT -----\n");
        receipt.append("Student Name: ").append(loggedInStudent.getUsername()).append("\n");
        receipt.append("Student ID: ").append(loggedInStudent.getId()).append("\n");
        receipt.append("Subject: ").append(subject.getSubjectName()).append("\n");
        receipt.append("Amount Paid: $").append(targetPayment.getAmount()).append("\n");
        receipt.append("Payment Date: ").append(targetPayment.getPaymentDate()).append("\n");
        receipt.append("Payment Accepted By: ").append(targetPayment.getReceptionistId()).append("\n"); 
        receipt.append("Receipt ID: ").append(targetPayment.getId()).append("\n");
        receipt.append("---------------------------\n");

        // Show in dialog
        JTextArea receiptArea = new JTextArea(receipt.toString());
        receiptArea.setEditable(false);
        JOptionPane.showMessageDialog(this, receiptArea, "Payment Receipt", JOptionPane.INFORMATION_MESSAGE);
}


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JButton makePaymentSubject1;
    private javax.swing.JButton makePaymentSubject2;
    private javax.swing.JButton makePaymentSubject3;
    private javax.swing.JButton receipt1;
    private javax.swing.JButton receipt2;
    private javax.swing.JButton receipt3;
    private javax.swing.JLabel subject1;
    private javax.swing.JLabel subject1Amount;
    private javax.swing.JLabel subject1Status;
    private javax.swing.JLabel subject2;
    private javax.swing.JLabel subject2Amount;
    private javax.swing.JLabel subject2Status;
    private javax.swing.JLabel subject3;
    private javax.swing.JLabel subject3Amount;
    private javax.swing.JLabel subject3Status;
    private javax.swing.JLabel totalAmount;
    // End of variables declaration//GEN-END:variables
}
