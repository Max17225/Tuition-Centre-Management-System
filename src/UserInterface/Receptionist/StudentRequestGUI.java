/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package UserInterface.Receptionist;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.util.List;
import DataModel.StudentRequest;
import DataModel.Enrollment;
import Util.DataManager;

/**
 *
 * @author Naviin06
 */
public class StudentRequestGUI extends javax.swing.JFrame {

    /**
     * Creates new form StudentRequest
     */
    public StudentRequestGUI() {
        initComponents();
        
        loadPendingRequests();
    }

    private void loadPendingRequests() {
        DataManager<StudentRequest> manager = DataManager.of(StudentRequest.class);
        List<StudentRequest> requests = manager.readFromFile();

        DefaultTableModel model = (DefaultTableModel) tblRequests.getModel();
        model.setRowCount(0); // clear

        for (StudentRequest req : requests) {
            if ("Pending".equalsIgnoreCase(req.getStatus())) {
                model.addRow(new Object[]{
                    req.getRequestId(),
                    req.getStudentId(),
                    req.getOldSubjectId(),
                    req.getNewSubjectId(),
                    req.getReason(),
                    req.getStatus()
                });
            }
        }
    }
private String getEnrollmentIdForStudent(String studentId) {
    DataManager<DataModel.Student> studentManager = DataManager.of(DataModel.Student.class);
    List<DataModel.Student> students = studentManager.readFromFile();

    for (DataModel.Student student : students) {
        if (student.getId().equals(studentId)) {
            return student.getEnrollmentId();
        }
    }
    return null;
}

   
    

    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        btnDecline = new javax.swing.JButton();
        btnExit = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblRequests = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        btnAccept = new javax.swing.JButton();
        btnDecline1 = new javax.swing.JButton();
        btnExit1 = new javax.swing.JButton();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        btnDecline.setText("Decline");
        btnDecline.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeclineActionPerformed(evt);
            }
        });

        btnExit.setText("Exit");
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tblRequests.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Request ID", "Student ID", "Old Subject", "New Subject", "Reason", "Status"
            }
        ));
        jScrollPane2.setViewportView(tblRequests);

        jLabel1.setText("                                   Student Request");

        btnAccept.setText("Accept");
        btnAccept.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAcceptActionPerformed(evt);
            }
        });

        btnDecline1.setText("Decline");
        btnDecline1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDecline1ActionPerformed(evt);
            }
        });

        btnExit1.setText("Exit");
        btnExit1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExit1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(366, 366, 366)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 318, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(99, 99, 99)
                        .addComponent(btnAccept, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(44, 44, 44)
                        .addComponent(btnDecline1, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(48, 48, 48)
                        .addComponent(btnExit1, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(240, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 372, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAccept)
                    .addComponent(btnDecline1)
                    .addComponent(btnExit1))
                .addGap(103, 103, 103))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnDeclineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeclineActionPerformed


    }//GEN-LAST:event_btnDeclineActionPerformed

    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
        // TOprivate void btnExitActionPerformed(java.awt.event.ActionEvent evt) {
    this.dispose(); // close the window

    }//GEN-LAST:event_btnExitActionPerformed

    private void btnDecline1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDecline1ActionPerformed
        // TOint row = tblRequests.getSelectedRow();
    int row = tblRequests.getSelectedRow();
    if (row == -1) {
        JOptionPane.showMessageDialog(this, "Please select a request.");
        return;
    }

    String requestId = tblRequests.getValueAt(row, 0).toString();

    DataManager<StudentRequest> manager = DataManager.of(StudentRequest.class);
    List<StudentRequest> requests = manager.readFromFile();

    for (StudentRequest req : requests) {
        if (req.getRequestId().equals(requestId)) {
            req.setStatus("Declined");
            break;
        }
    }

    manager.overwriteFile(requests);
    JOptionPane.showMessageDialog(this, "Request declined.");
    loadPendingRequests();

    }//GEN-LAST:event_btnDecline1ActionPerformed

    private void btnExit1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExit1ActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnExit1ActionPerformed

    private void btnAcceptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAcceptActionPerformed
     
    int row = tblRequests.getSelectedRow();
    if (row == -1) {
        JOptionPane.showMessageDialog(this, "Please select a request.");
        return;
    }

    String requestId = tblRequests.getValueAt(row, 0).toString();
    String studentId = tblRequests.getValueAt(row, 1).toString();
    String oldSub = tblRequests.getValueAt(row, 2).toString();
    String newSub = tblRequests.getValueAt(row, 3).toString();

    // Update request status to Accepted
    DataManager<StudentRequest> manager = DataManager.of(StudentRequest.class);
    List<StudentRequest> requests = manager.readFromFile();

    for (StudentRequest req : requests) {
        if (req.getRequestId().equals(requestId)) {
            req.setStatus("Accepted");
            break;
        }
    }
    manager.overwriteFile(requests);

    // âœ… Get enrollmentId from Student file
    String enrollmentId = getEnrollmentIdForStudent(studentId);
    if (enrollmentId == null) {
        JOptionPane.showMessageDialog(this, "Enrollment ID not found for student.");
        return;
    }

    // âœ… Update subject in Enrollment file
    DataManager<Enrollment> enrollManager = DataManager.of(Enrollment.class);
    List<Enrollment> enrollments = enrollManager.readFromFile();

    for (Enrollment e : enrollments) {
        if (e.getId().equals(enrollmentId)) {
            if (e.getSubjectId1().equals(oldSub)) e.setSubjectId1(newSub);
            else if (e.getSubjectId2().equals(oldSub)) e.setSubjectId2(newSub);
            else if (e.getSubjectId3().equals(oldSub)) e.setSubjectId3(newSub);
            break;
        }
    }
    enrollManager.overwriteFile(enrollments);

    JOptionPane.showMessageDialog(this, "Request accepted and subject updated.");
    loadPendingRequests(); // refresh
    }//GEN-LAST:event_btnAcceptActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(StudentRequestGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(StudentRequestGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(StudentRequestGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StudentRequestGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new StudentRequestGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAccept;
    private javax.swing.JButton btnDecline;
    private javax.swing.JButton btnDecline1;
    private javax.swing.JButton btnExit;
    private javax.swing.JButton btnExit1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable tblRequests;
    // End of variables declaration//GEN-END:variables
}
