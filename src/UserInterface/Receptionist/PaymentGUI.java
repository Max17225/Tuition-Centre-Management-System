/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package UserInterface.Receptionist;

import DataModel.Payment;
import Util.DataManager;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.util.List;

public class PaymentGUI extends javax.swing.JFrame {

    private final DataManager<Payment> paymentManager = DataManager.of(Payment.class);
    private final String receptionistId;

    public PaymentGUI(String receptionistId) {
        this.receptionistId = receptionistId;
        initComponents();
        jLabel1.setText("Logged in as: " + receptionistId); // Optional
        loadPaymentData();
    }

    private void loadPaymentData() {
        DefaultTableModel model = (DefaultTableModel) tblPayments.getModel();
        model.setRowCount(0); // Clear table

        List<Payment> payments = paymentManager.readFromFile();
        for (Payment p : payments) {
            if ("Pending".equalsIgnoreCase(p.getStatus())) {
                model.addRow(new Object[]{
                    p.getId(), p.getReceptionistId(), p.getStudentId(),
                    p.getSubjectId(), p.getAmount(), p.getPaymentDate(), p.getStatus()
                });
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblPayments = new javax.swing.JTable();
        btnConfirm = new javax.swing.JButton();
        btnExit = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("                                                   Payment");

        tblPayments.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Payment ID", "Receptionist ID", "Student ID", "Subject ID", "Amount", "Payment Date", "Status"
            }
        ));
        jScrollPane1.setViewportView(tblPayments);

        btnConfirm.setText("Accept Payment");
        btnConfirm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfirmActionPerformed(evt);
            }
        });

        btnExit.setText("Exit");
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(336, 336, 336)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 368, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(136, 136, 136)
                        .addComponent(btnConfirm, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(65, 65, 65)
                        .addComponent(btnExit, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(299, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 490, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnConfirm)
                    .addComponent(btnExit))
                .addContainerGap(46, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnConfirmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfirmActionPerformed

   int selectedRow = tblPayments.getSelectedRow();
    if (selectedRow == -1) {
        JOptionPane.showMessageDialog(this, "Please select a payment to confirm.");
        return;
    }

    String paymentId = tblPayments.getValueAt(selectedRow, 0).toString();
    Payment payment = paymentManager.getRecordById(paymentId);

    if (payment != null && "Pending".equalsIgnoreCase(payment.getStatus())) {
        payment.setStatus("Paid");
        payment.setReceptionistId(receptionistId); // ✅ Set logged-in receptionist

        paymentManager.updateRecord(payment); // ✅ Save changes to file

        JOptionPane.showMessageDialog(this, "Payment marked as 'Paid'.");

        loadPaymentData(); // ✅ Refresh table
    } else {
        JOptionPane.showMessageDialog(this, "Payment already processed or invalid.");
    }
    
    }//GEN-LAST:event_btnConfirmActionPerformed

    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
this.dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_btnExitActionPerformed
private void updateReceptionistIdInFile(String paymentId, String newReceptionistId) {
        List<Payment> allPayments = paymentManager.readFromFile();
        for (int i = 0; i < allPayments.size(); i++) {
            Payment p = allPayments.get(i);
            if (p.getId().equals(paymentId)) {
                // Update receptionistId manually in data line
                String[] parts = p.toDataLine().split(",");
                parts[1] = newReceptionistId; // index 1 is receptionist ID
                String updatedLine = String.join(",", parts);
                replaceLineInFile(paymentId, updatedLine);
                break;
            }
        }
    }

    private void replaceLineInFile(String paymentId, String newLine) {
        List<String> allLines = paymentManager.readRawLines();
        for (int i = 0; i < allLines.size(); i++) {
            if (allLines.get(i).startsWith(paymentId + ",")) {
                allLines.set(i, newLine);
                break;
            }
        }
        paymentManager.overwriteRawLines(allLines);
    }
    /**
     * @param args the command line arguments
     */
 public static void main(String[] args) {
        SwingUtilities.invokeLater(() -> new PaymentGUI("R0001").setVisible(true));
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnConfirm;
    private javax.swing.JButton btnExit;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblPayments;
    // End of variables declaration//GEN-END:variables

}